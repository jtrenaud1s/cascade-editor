// Generated by https://quicktype.io

export interface MajorAsset {
    asset:   Asset;
    success: boolean;
}

export interface Asset {
    page: Page;
}

export interface Page {
    contentTypeId:            string;
    contentTypePath:          string;
    structuredData:           StructuredData;
    pageConfigurations:       PageConfiguration[];
    linkRewriting:            string;
    shouldBePublished:        boolean;
    shouldBeIndexed:          boolean;
    lastPublishedDate:        string;
    lastPublishedBy:          string;
    expirationFolderRecycled: boolean;
    metadata:                 Metadata;
    reviewOnSchedule:         boolean;
    reviewEvery:              number;
    parentFolderId:           string;
    parentFolderPath:         string;
    lastModifiedDate:         string;
    lastModifiedBy:           string;
    createdDate:              string;
    createdBy:                string;
    path:                     string;
    siteId:                   string;
    siteName:                 string;
    tags:                     any[];
    name:                     string;
    id:                       string;
}

export interface Metadata {
    displayName:     string;
    title:           string;
    summary:         string;
    teaser:          string;
    keywords:        string;
    metaDescription: string;
    author:          string;
    dynamicFields:   DynamicField[];
}

export interface DynamicField {
    name:        string;
    fieldValues: FieldValue[];
}

export interface FieldValue {
    value: string;
}

export interface PageConfiguration {
    name:                  string;
    defaultConfiguration:  boolean;
    templateId:            string;
    templatePath:          string;
    formatRecycled:        boolean;
    pageRegions:           PageRegion[];
    includeXMLDeclaration: boolean;
    publishable:           boolean;
    id:                    string;
}

export interface PageRegion {
    name:           string;
    blockRecycled:  boolean;
    noBlock:        boolean;
    formatRecycled: boolean;
    noFormat:       boolean;
    id:             string;
    formatId?:      string;
    formatPath?:    string;
}

export interface StructuredData {
    structuredDataNodes: StructuredDataStructuredDataNode[];
}

export interface PurpleStructuredDataNode {
    type:                 Type;
    identifier:           string;
    recycled:             boolean;
    text?:                string;
    fileId?:              string;
    filePath?:            string;
    assetType?:           string;
    structuredDataNodes?: StructuredDataStructuredDataNode[];
}

export interface StructuredDataStructuredDataNode {
    type:                 Type;
    identifier:           string;
    structuredDataNodes?: PurpleStructuredDataNode[];
    recycled:             boolean;
}

export enum Type {
    Asset = "asset",
    Group = "group",
    Text = "text",
}
